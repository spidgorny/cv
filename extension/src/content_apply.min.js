(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],2:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],3:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],4:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":3,"_process":1,"inherits":2}],5:[function(require,module,exports){
module.exports={
	"basics": {
		"anrede": ["Herr", "M", "Male", "male", "Mr."],
		"title": ["Sir", "Dipl.-Informatiker (FH)", "CS Major", "Prof."],
		"firstName": "Slawa",
		"lastName": "Jobsucher",
		"name": "Slawa Jobsucher",
		"label": "Web Developer",
		"summary": "I’m a full stack web developer who loves working with open source technology. I work best at planning the architecture of web  applications and their development life cycles. I also love to get the community involved and have had much experience with building and organizing large open source groups.",
		"email": "slapidya@yahoo.com",
		"website": "https://github.com/spidgorny",
		"phone": "+49 1321 654987",
		"phone2": "+49 654 987 654",
		"fax": "fax?",
		"username": "slawa.jobsucher",
		"password": "5nQ4AN9sgdP",
		"preferredContact": ["E-mail", "e-mail", "E-Mail"],
		"birthDate": {
			"us": "06/18/2017",
			"eu": "18.06.2017",
			"iso": "2017-06-16",
			"day": "20",
			"month": ["10", "February", "Februar"],
			"year": "1979"
		},
		"birthPlace": "Kiev, Ukraine",
		"nationality": ["Germany", "Russia", "New Zealand", "Deutschland"],
		"legalRepresentative": "Mother",
		"contactLanguage": "English",
		"disability": "Keine Behinderung",
		"location": {
			"street": "Upon request",
			"zip": "12345",
			"city": "Frankfurt am Main",
			"countryCode": "DE",
			"country": ["Germany", "Deutschland"],
			"address2": "",
			"region": "Hessen"
		},
		"profiles": [
			{
				"username": "ajaxdavis",
				"url": "https://twitter.com/ajaxdavis",
				"network": "twitter"
			},
			{
				"url": "https://github.com/thomasdavis",
				"username": "thomasdavis",
				"network": "github"
			}
		]
	},
	"coverLetter": "Hi, I'm a rock-star developer. Hire me.",
	"education": [
		{
			"type": "school",
			"endDate": "2009-12-12",
			"startDate": "2008-02-12",
			"area": "Software Engineering (incomplete)",
			"studyType": "Gymnasium",
			"institution": "The University of Queensland",
			"degree": "Abitur"
		},
		{
			"type": "apprenticeship1",
			"endDate": "2009-12-12",
			"startDate": "2008-02-12",
			"area": "Software Engineering (incomplete)",
			"studyType": "Bachelors",
			"institution": "The University of Queensland",
			"location": "Berlin",
			"comment": "It was nice"
		},
		{
			"type": "apprenticeship2",
			"endDate": "2009-12-12",
			"startDate": "2008-02-12",
			"area": "Software Engineering (incomplete)",
			"studyType": "Bachelors",
			"institution": "The University of Queensland",
			"location": "Frankfurt",
			"comment": "It was not nice"
		},
		{
			"type": "education1",
			"endDate": "2009-12-12",
			"startDate": "2008-02-12",
			"area": "Software Engineering (incomplete)",
			"studyType": ["Bachelors", "Bachelor of Computer Science"],
			"institution": "The University of Queensland",
			"country": "Australia"
		},
		{
			"type": "education2",
			"endDate": "2009-12-12",
			"startDate": "2008-02-12",
			"area": "Software Engineering (incomplete)",
			"studyType": "Bachelors",
			"institution": "The University of Queensland"
		}
	],
	"references": [
		{
			"reference": "Thomas was hired as a lead developer and, upon the leaving of our co-founder took over as CTO of Earbits. Thomas is, hands down, one of those A Players you hear of companies dying to hire. He is incredibly smart, not just at code but about everything from classical music to Chinese language and culture. Thomas is great to work with and, as a well established contributor to open source projects and several successful ventures, commands the respect of engineers at all levels. I would suggest doing anything you can to have him on your team.",
			"name": "Joey Flores, Co-founder and CEO of Earbits, Inc."
		},
		{
			"reference": "I've had the great pleasure of working with Thomas for the past three years at Earbits, and on a few side projects. Two years ago our CTO left on a moment's notice, Thomas saved our company by quickly stepping up to fill this role. He has been with our company through thick and thin and made serious personal sacrifices in order to help the company during tough times. He is a phenomenal hacker and a true team player. Highly recommended!",
			"name": "Yotam Rosenbaum, SVP of Operations, Earbits, Inc."
		},
		{
			"reference": "Thomas is an extremely talented engineer with a very broad range of skills and experience. From being a thought leader in the front-end community via backbonetutorials.com and cdnjs.com, to designing and implementing the API for cdnjs.com, working with Thomas has been fantastic learning experience. Thomas is truly a full stack develop, and his work output is incredible. If there is any opportunity to work with Thomas, I take it. He is the definition of an A player.",
			"name": "Ryan Kirkman, Senior Software Engineer at Nerdwallet"
		},
		{
			"reference": "On Thomas Davis ... Hire this guy. Do not be fooled. Incredibly capable and fast. Plays well with others. Unbelievable at front-end work end programming but that is just the start. Visionary. Hire him before I do.",
			"name": "Greg Davis"
		}
	],
	"skills": [
		{
			"keywords": [
				"HTML",
				"CSS",
				"Javascript",
				"React",
				"Redux"
			],
			"name": "Frontend"
		},
		{
			"keywords": [
				"Node",
				"Ruby",
				"Postgres",
				"DynamoDb"
			],
			"name": "Backend"
		}
	],
	"work": [
		{
			"highlights": [
				"We are hiring! -> https://listium.com/jobs",
				"Many difficult technical problems"
			],
			"summary": "Create private lists, share lists with friends, or publish your lists and share them with the world. All in one place.",
			"website": "https://listium.com",
			"company": "Listium",
			"position": "Developer",
			"startDate": "2016-01-01",
			"startMonth": ["Januar"],
			"startYear": "2006",
			"endDate": "2017-06-20",
			"endMonth": ["Januar"],
			"endYear": "2017",
			"city": "Berlin",
			"country": ["Deutschland"]
		},
		{
			"highlights": [
				"Millions of sites use the CDN in production",
				"Larger market share than Yahoo's and Microsoft's content distribution network",
				"We serve hundreds of billions request a month",
				"Contains over 2000 popular Javascript libraries",
				"Millions of developers visit the site per year"
			],
			"summary": "Following Google’s CDN for jQuery, we decided to start a CDN for the less popular Javascript frameworks. The CDN is community moderated and open source on GitHub. We secured a partnership with Cloudflare who now supports the infrastructure.",
			"website": "http://www.cdnjs.com",
			"company": "Cdnjs",
			"position": "Co-Founder",
			"startDate": "2011-01-08"
		},
		{
			"highlights": [
				"Developed new tools for contacting congress",
				"Brainstormed campaign ideas to raise maximum awareness about issues",
				"Lots of social networking integration"
			],
			"summary": "Hired to take EFF's campaigning to the next level by building an action centre in Ruby on Rails. The action centre is built around some large open source tools that lower the barrier to entry when contacting congress.",
			"website": "http://www.eff.org",
			"company": "Electronic Frontier Foundation",
			"position": "Developer",
			"startDate": "2014-04-01"
		},
		{
			"highlights": [
				"Managed a small team of developers and designers",
				"Built the entire frontend application with Backbone.js",
				"Transferred all of the infrastructure from Heroku to AWS"
			],
			"summary": "Started off as a front end developer but took on the role of CTO in early 2013. The application frontend is built with Javascript and organized as a single page application that talks to a collection of Rails web servers which are connected to MongoDB.",
			"website": "http://www.earbits.com",
			"company": "Earbits",
			"position": "CTO",
			"endDate": "2014-01-09",
			"startDate": "2013-03-08"
		},
		{
			"highlights": [
				"Over 1500 stars on Github",
				"Community developed themes",
				"50,000 views on the hosted service"
			],
			"summary": "JSON Resume is a community driven open source initiative to create a JSON based standard for resumes. There is no reason why there can't be a common standard for writing a resume that can be extended with an ecosystem of open source tools.",
			"website": "http://jsonresume.org",
			"company": "JSON Resume",
			"position": "Founder",
			"startDate": "2014-04-01"
		},
		{
			"highlights": [
				"Generated  37,000,000 banner views",
				"100, 000 phone calls to congress",
				"500, 000 emails",
				"250, 000 signatures"
			],
			"summary": "Worked on many politically charged campaigns against mass surveillance. Not only technically challenging work but also a lot of networking and getting my hands dirty with politics.    Our biggest project was \"TheDayWeFightBack\"..",
			"website": "http://www.taskforce.is",
			"company": "Taskforce.is",
			"position": "Developer",
			"startDate": "2013-06-01"
		},
		{
			"highlights": [
				"The site and blog combined have managed to receive over 200,000 visitors in 2014."
			],
			"summary": "An international directory of civilian drone / UAV operators for hire. Services include aerial photography, aerial video, mapping, surveying, precision agriculture, real estate photography, remote inspections and infrared imaging. Our plan is to be the place to go when looking for UAV/Drone services. The website is built in Backbone.js and API is built with Node.js and Postgres. ",
			"website": "http://www.dronehire.org",
			"company": "Drone Hire",
			"position": "Co-Founder",
			"startDate": "2013-01-01"
		},
		{
			"highlights": [
				"Over two million unique visitors a year",
				"25,000+ ebook downloads",
				"280,000 Youtube views"
			],
			"summary": "I write tutorials and blog post regarding the popular Javascript framework Backbone.js. The tutorials cover a range of topics regarding front end development aimed at beginners, experts and anyone in between.",
			"website": "http://backbonetutorials.com",
			"company": "BackboneTutorials.com",
			"position": "Founder",
			"startDate": "2011-01-01"
		},
		{
			"summary": "Ephox is a worldwide company who is heavily involved with the development of TinyMce and enterprise editors. My primary role included building front-end widgets and applications. Worked on a major product using Backbone.js as a base. Heavily involved in UI/UX design and wire-framing. Also spend a lot of time designing API specifications and documentation.",
			"website": "http://ephox.com",
			"company": "Ephox",
			"position": "Front-end Developer",
			"endDate": "2012-06-01",
			"startDate": "2011-01-01"
		}
	]
}

},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const IndeedCom_1 = require("./sites/IndeedCom");
const JSONResume_1 = require("./JSONResume");
const OnApplyDe_1 = require("./sites/OnApplyDe");
const BMWGroupDe_1 = require("./sites/BMWGroupDe");
const JobsNintendoDe_1 = require("./sites/JobsNintendoDe");
const DaimlerCom_1 = require("./sites/DaimlerCom");
const DocumentFields_1 = require("./DocumentFields");
const TaleoNet_1 = require("./sites/TaleoNet");
const GoogleCom_1 = require("./sites/GoogleCom");
const util_1 = require("util");
const VolkswagenDe_1 = require("./sites/VolkswagenDe");
// const isBrowser = this.window === this;
const isBrowser = typeof window == 'object' && window.toString() == "[object Window]";
class Apply {
    constructor(document) {
        this.fillerMap = {
            'onapply.de': OnApplyDe_1.OnApplyDe,
            'indeed.com': IndeedCom_1.IndeedCom,
            'bmwgroup.de': BMWGroupDe_1.BMWGroupDe,
            'jobs.nintendo.de': JobsNintendoDe_1.JobsNintendoDe,
            'daimler.com': DaimlerCom_1.DaimlerCom,
            'taleo.net': TaleoNet_1.TaleoNet,
            'google.com': GoogleCom_1.GoogleCom,
            'volkswagen.de': VolkswagenDe_1.VolkswagenDe,
        };
        this.document = document;
        this.$ = this.document.querySelector.bind(this.document);
        this.$$ = selector => {
            // https://davidwalsh.name/nodelist-array
            const list = this.document.querySelectorAll(selector);
            return [].slice.call(list);
        };
        if (isBrowser) {
            chrome.runtime.onMessage.addListener(this.messageHandler.bind(this));
            document.defaultView['apply'] = this;
            document['apply'] = this;
        }
        this.resume = new JSONResume_1.JSONResume(require('./../fixture/thomasdavis.json'));
        // console.log(this.resume);
    }
    checkForm() {
        const selectors = this.getSelectors();
        if (selectors) {
            console.log('selectors', selectors.length);
            const json = this.zipMap(selectors, (selector) => {
                try {
                    return this.$(selector);
                }
                catch (e) {
                    if (e instanceof DOMException) {
                    }
                    else {
                        throw e;
                    }
                }
            }, '');
            console.log(json);
            //console.log(JSON.stringify(json, null, 4));
        }
        else {
            console.log('no forms on this page');
        }
    }
    getSelectorsFromFrames() {
        let allSelectors = [];
        let allFrames = [];
        allFrames = this.$$('iframe').map((item) => {
            let doc = null;
            // Error in event handler for runtime.onMessage: SecurityError: Blocked a frame with origin
            try {
                doc = item.contentWindow.document;
            }
            catch (e) {
                // ignore
            }
            return doc;
        });
        allFrames = allFrames.filter(el => {
            return !util_1.isNull(el); // remove empty due to the
        });
        allFrames.unshift(this.document); // if there are no iframes
        console.log('frames', allFrames.length);
        allFrames.forEach(frameDocument => {
            //console.log('frameDocument->input', frameDocument.querySelectorAll('input'));
            let df = new DocumentFields_1.DocumentFields(frameDocument);
            allSelectors.push({
                df: df,
                iframe: frameDocument,
                selectors: df.getSelectors(),
            });
        });
        return allSelectors;
    }
    getSelectors() {
        const allSelectors = this.getSelectorsFromFrames();
        console.log('allSelectors', allSelectors.length);
        let merged = [];
        allSelectors.forEach((el, idx) => {
            if (!el.selectors.length) {
                el.selectors = el.df.getSelectors();
            }
            console.log(el.iframe, el.selectors);
            console.log('frame', idx, 'concat', el.selectors.length);
            merged = merged.concat(el.selectors);
            console.log('merged', merged.length);
        });
        return merged;
    }
    messageHandler(request, sender, sendResponse) {
        // console.log(sender.tab ?
        // 	"from a content script:" + sender.tab.url :
        // 	"from the extension");
        switch (request.action) {
            case 'clickIcon':
                this.clickIcon(request, sendResponse);
                break;
            case 'showSelectors':
                this.showSelectors(request, sendResponse);
                break;
        }
    }
    clickIcon(request, done) {
        console.log('request', request);
        const selectors = this.getSelectors();
        // this.dumpSelectorValues(selectors);
        const filler = this.getFiller(document.location.host);
        console.log(filler);
        if (filler) {
            filler.fill(document);
        }
        else {
            console.log("we don't know how to fill ", document.location.host);
        }
        done();
    }
    dumpSelectorValues(selectors) {
        const values = selectors.map(selector => {
            try {
                const el = this.$(selector);
                if (el) {
                    if ('selectedIndex' in el) {
                        let option = el.options[el.selectedIndex];
                        if (option) {
                            return option.value;
                        }
                    }
                    else {
                        return el.value;
                    }
                }
            }
            catch (e) {
                if (e instanceof DOMException) {
                }
                else {
                    throw e;
                }
            }
        });
        const zip = this.zip(selectors, values);
        console.log(zip);
    }
    zip(selectors, values, defaultV = undefined) {
        const zip = {};
        selectors.forEach((key, idx) => {
            if (typeof values == 'function') {
                zip[key] = values(key, idx);
            }
            else {
                zip[key] = idx in values ? values[idx] : defaultV;
            }
        });
        return zip;
    }
    zipMap(selectors, values, defaultV = undefined) {
        const zip = new Map();
        selectors.forEach((key, idx) => {
            if (typeof values == 'function') {
                zip[key] = values(key, idx);
            }
            else {
                zip[key] = idx in values ? values[idx] : defaultV;
            }
        });
        return zip;
    }
    getFiller(host) {
        let filler;
        const one = Object.keys(this.fillerMap).filter((domain) => {
            return host.endsWith(domain);
        });
        if (one.length) {
            const className = this.fillerMap[one[0]]; // onapply.de => OnApplyDe
            //filler = require('./sites/' + className);
            //filler = filler[className];
            //filler = new this[className]();
            // filler = Object.create(className);
            filler = new className(this.resume);
        }
        return filler;
    }
    showSelectors(request, done) {
        const selectors = this.getSelectors();
        selectors.map(selector => {
            try {
                const el = this.$(selector);
                if (el && !el.value) {
                    el.value = selector;
                    if (el instanceof HTMLSelectElement) {
                        const optionName = document.createElement('option');
                        optionName.innerHTML = selector;
                        el.options.add(optionName);
                        el.selectedIndex = el.options.length - 1;
                    }
                }
            }
            catch (e) {
                if (e instanceof DOMException) {
                }
                else {
                    throw e;
                }
            }
        });
        done();
    }
}
exports.Apply = Apply;

},{"./../fixture/thomasdavis.json":5,"./DocumentFields":7,"./JSONResume":9,"./sites/BMWGroupDe":11,"./sites/DaimlerCom":13,"./sites/GoogleCom":14,"./sites/IndeedCom":15,"./sites/JobsNintendoDe":16,"./sites/OnApplyDe":17,"./sites/TaleoNet":18,"./sites/VolkswagenDe":19,"util":4}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const FieldConfig_1 = require("./FieldConfig");
class DocumentFields {
    constructor(document) {
        this.document = document;
        this.$ = this.document.querySelector.bind(this.document);
        this.$$ = selector => {
            // https://davidwalsh.name/nodelist-array
            const list = this.document.querySelectorAll(selector);
            return [].slice.call(list);
        };
    }
    getSelectors() {
        const forms = this.$$('form');
        let form;
        if (forms.length == 1) {
            form = forms[0];
        }
        else if (forms.length == 0) {
            form = this.document; // search all <inputs>
        }
        else {
            form = this.findLargestForm(forms);
        }
        if (form) {
            let fields = form.querySelectorAll('input,select,button,textarea');
            fields = [].slice.call(fields);
            console.log(form, fields);
            const config = this.extractForm(fields);
            // console.log(JSON.stringify(config, null, 4));
            const selectors = config.map((el) => {
                return el.selector;
            });
            return selectors;
        }
        else {
            console.log('there are no forms');
        }
        return [];
    }
    findLargestForm(forms) {
        const mapLength = forms.map((el) => {
            return el.querySelectorAll('input,select,button,textarea').length;
        });
        const max = Math.max(...mapLength);
        const maxIndex = mapLength.indexOf(max);
        return forms[maxIndex];
    }
    extractForm(fields) {
        let collection = [];
        const allClasses = fields.map(el => {
            return el.className;
        });
        const classFrequency = this.getFrequency(allClasses);
        fields.forEach((field) => {
            let labels = this.getLabels(field);
            const config = new FieldConfig_1.FieldConfig({
                'selector': this.getSelector(field, labels, classFrequency),
                'tagName': field.tagName.toLowerCase(),
                'type': field.type,
                'class': field.className,
                'id': field.id,
                'labels': labels,
            });
            collection.push(config);
        });
        return collection;
    }
    getLabels(field) {
        return field.labels
            ? [].slice.call(field.labels).map((el) => {
                return el.innerText.trim();
            }) : null;
    }
    getSelector(field, labels, classFrequency) {
        let selector = field.tagName.toLowerCase();
        // avoid id with numbers
        if (field.id && !field.id.match(/[0-9]/)) {
            selector += '#' + field.id;
        }
        else if (field.name && !field.name.match(/[0-9]/)) {
            selector += '[name="' + field.name + '"]';
        }
        else if (field.className && classFrequency[field.className] == 1) {
            const classes = field.className.split(' ');
            selector += '.' + classes.join('.');
            // } else if (labels && labels.length) {
            // 	selector = 'label:contains("'+labels[0]+'") '+selector;
        }
        else if (field.name) {
            selector += '[name="' + field.name + '"]';
        }
        else if (field.id) {
            selector += '#' + field.id;
        }
        else if (field.type) {
            selector += '[type="' + field.type + '"]';
        }
        return selector;
    }
    getFrequency(array) {
        return array.reduce(this.countDuplicates, {});
    }
    countDuplicates(obj, num) {
        obj[num] = (++obj[num] || 1);
        return obj;
    }
}
exports.DocumentFields = DocumentFields;

},{"./FieldConfig":8}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class FieldConfig {
    constructor(props) {
        Object.assign(this, props);
    }
}
exports.FieldConfig = FieldConfig;

},{}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class JSONResume {
    constructor(props) {
        Object.assign(this, props);
    }
    findDeep(path) {
        let current = this;
        path.split('.').forEach((p) => { current = current[p]; });
        return current;
    }
    setEducationByType() {
        let educationByType = new Map();
        this.education.forEach((edu) => {
            let type = edu.type;
            educationByType[type] = edu;
        });
        console.log(educationByType);
        this.educationByType = educationByType;
    }
}
exports.JSONResume = JSONResume;

},{}],10:[function(require,module,exports){
console.log('Apply 0.2');
const Apply = require('./Apply').Apply;
new Apply(document).checkForm();

},{"./Apply":6}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BasicFiller_1 = require("./BasicFiller");
/**
 * @see
 */
class BMWGroupDe extends BasicFiller_1.BasicFiller {
    constructor() {
        super(...arguments);
        this.map = {
            "select#anredeid": "basics.anrede",
            "input#vorname": "basics.firstName",
            "input#nachname": "basics.lastName",
            "input#benutzername": "basics.username",
            "input#passwort": "basics.password",
            "input#passwortwiederholung": "basics.password",
            "input#email": "basics.email",
            "input#emailwiederholung": "basics.email",
        };
    }
}
exports.BMWGroupDe = BMWGroupDe;

},{"./BasicFiller":12}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class BasicFiller {
    constructor(resume) {
        this.resume = resume;
    }
    fill(document) {
        Object.keys(this.map).forEach((selector) => {
            const path = this.map[selector];
            const value = this.resume.findDeep(path);
            console.log(selector, path, value);
            const el = document.querySelector(selector);
            if (el) {
                if (el.tagName.toUpperCase() == 'SELECT') {
                    this.fillSelect(el, value, Array.isArray(value) ? value : [value]);
                }
                else if (el.tagName.toUpperCase() == 'TEXTAREA') {
                    this.fillTextarea(el, value);
                }
                else if (el.type.toUpperCase() == 'CHECKBOX') {
                    this.fillCheckbox(el, value);
                }
                else if (el.type.toUpperCase() == 'RADIO') {
                    this.fillRadio(el, value);
                }
                else {
                    el.value = value;
                }
            }
        });
    }
    fillSelect(el, value, values) {
        const options = [].slice.call(el.options).map((el) => {
            return el.innerHTML.trim();
        });
        let index;
        if (values && values.length) {
            index = values.reduce((acc, el) => {
                if (acc > -1) {
                    return acc;
                }
                else {
                    return options.indexOf(el);
                }
            }, -1);
        }
        else {
            index = options.indexOf(value);
        }
        console.log(options, value, index, options[index]);
        if (index >= 0) {
            el.selectedIndex = index;
        }
        return el;
    }
    fillTextarea(el, value) {
        el.innerHTML = value;
    }
    fillCheckbox(el, value) {
        el.checked = value;
    }
    fillRadio(el, value) {
        const name = el.name;
        let sameName = document.getElementsByName(name);
        sameName = [].slice.call(sameName);
        console.log(name, sameName, value);
        const aValue = Array.isArray(value) ? value : [value];
        sameName.forEach((el) => {
            if (-1 < aValue.indexOf(el.value.trim())) {
                el.checked = true;
            }
        });
    }
}
exports.BasicFiller = BasicFiller;

},{}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BasicFiller_1 = require("./BasicFiller");
/**
 * @see
 */
class DaimlerCom extends BasicFiller_1.BasicFiller {
    constructor() {
        super(...arguments);
        this.map = {
            'input#HRS_APPL_WRK_HRS_OPRNAME\\$13\\$': 'basics.email',
            'input#HRS_APPL_WRK_HRS_OPRPSWD\\$15\\$': 'basics.password',
            'input#HRS_APPL_WRK_HRS_CONFMPSWD': 'basics.password',
            'input#HRS_APPL_WRK_HRS_OPRNAME': 'basics.email',
            'input#HRS_APPL_WRK_HRS_OPRPSWD': 'basics.password',
            'select#HRS_NAME_WORK_NAME_PREFIX.PSDROPDOWNLIST': 'basics.anrede',
            'select#HRS_NAME_WORK_NAME_TITLE.PSDROPDOWNLIST': 'basics.title',
            'input#HRS_NAME_WORK_FIRST_NAME.PSEDITBOX': 'basics.firstName',
            'input#HRS_NAME_WORK_LAST_NAME.PSEDITBOX': 'basics.lastName',
            'input#HRS_APPLICANT_BIRTHDATE.PSEDITBOX': 'basics.birthDate.us',
            'input#HRS_APPLICANT_BIRTHPLACE.PSEDITBOX': 'basics.birthPlace',
            'select#HRS_APP_NAT_GER_HRS_NATION_CD\\$0.PSDROPDOWNLIST': 'basics.nationality',
            'input#HRS_ADDR_WORK_ADDRESS1.PSEDITBOX': 'basics.location.street',
            'input#HRS_ADDR_WORK_POSTAL.PSEDITBOX': 'basics.location.zip',
            'input#HRS_ADDR_WORK_CITY.PSEDITBOX': 'basics.location.city',
            'select#HRS_ADDR_WORK_COUNTRY.PSDROPDOWNLIST': 'basics.location.country',
            'input#HRS_ADDR_WORK_ADDRESS2.PSEDITBOX': 'basics.location.address2',
            'select#HRS_APPLICANT_DC_GES_VERTRET_CD': 'basics.legalRepresentative',
            'select#HRS_APPLICANT_DC_HRS_APP_PREF_LN.PSDROPDOWNLIST': 'basics.contactLanguage',
            'input#HRS_APP_EMAIL_EMAIL_ADDR\\$0.PSEDITBOX': 'basics.email',
            'input#HRS_APP_PHONE_PHONE\\$0.PSEDITBOX': 'basics.phone',
            'textarea#HRS_RESM_APP_VW_RESUME_TEXT\\$0': 'coverLetter',
        };
    }
    /**
     * filling with iframes
     * @param document
     */
    fill(document) {
        document.querySelectorAll('iframe').forEach(item => {
            let frameDocument = item.contentWindow.document;
            super.fill(frameDocument);
        });
    }
}
exports.DaimlerCom = DaimlerCom;

},{"./BasicFiller":12}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BasicFiller_1 = require("./BasicFiller");
/**
 * @see https://www.google.com/about/careers/applications/u/1/packets/d12dae4f-27d3-4a9b-9c2b-b7f52723c739/form
 */
class GoogleCom extends BasicFiller_1.BasicFiller {
    constructor(resume) {
        super(resume);
        this.map = {
            'input[name="legalName"]': 'basics.name',
            'textarea#input_2': 'basics.location.street',
            'select[name="contactInfoCountry"]': 'basics.location.country',
            'input[name="contactInfoCity"]': 'basics.location.city',
            'input#input_268': 'basics.location.region',
            'input#input_6': 'basics.location.zip',
            'input#phone-0': 'basics.phone',
            'input#input_7': 'basics.website',
            'input#school-name-0': 'educationByType.education1.institution',
            'input[name="degreeMajor0"]': 'educationByType.education1.area',
        };
        this.delay = 500;
        /**
         * counter for setTimeout
         * @type {number}
         */
        this.i = 0;
        this.resume.setEducationByType();
    }
    fill(document) {
        super.fill(document);
        // angular requires to click each fake element to update value
        Object.keys(this.map).forEach((selector) => {
            setTimeout(() => {
                const el = document.querySelector(selector);
                if (el) {
                    console.log('clicking on', el);
                    el.focus();
                    el.click();
                }
            }, this.delay * this.i++);
        });
        setTimeout(this.setCountry.bind(this, document), this.delay * this.i++);
        let studyType = this.resume.findDeep('educationByType.education1.studyType');
        setTimeout(this.setSelector.bind(this, document, 'select_833', studyType), this.delay * this.i++);
        setTimeout(this.setSelector.bind(this, document, 'degree-status-0', 'Graduated'), this.delay * this.i++);
        let studyCountry = this.resume.findDeep('educationByType.education1.country');
        console.log('studyCountry', studyCountry);
        setTimeout(this.setSelector.bind(this, document, 'select_277', studyCountry), this.delay * this.i++);
    }
    setCountry(document) {
        let userCountryCode = this.resume.findDeep('basics.location.countryCode');
        let country = document.querySelector('md-select#select_3');
        if (country) {
            console.log('country', country);
            country.focus();
            country.click();
            setTimeout(() => {
                let validOptionSelector = 'div.md-select-menu-container.md-active md-option[value="' + userCountryCode + '"]';
                // query document as this is a floating div outside of <md-select>
                let validOption = document.querySelector(validOptionSelector);
                console.log(validOptionSelector, validOption);
                if (validOption) {
                    validOption.focus();
                    validOption.click();
                }
            }, 1);
        }
    }
    setSelector(document, id, value) {
        let selector = document.querySelector('md-select#' + id);
        if (selector) {
            console.log('selector', selector);
            selector.focus();
            selector.click();
            setTimeout(() => {
                let optionSelector = 'div.md-select-menu-container.md-active md-option div.md-text';
                // query document as this is a floating div outside of <md-select>
                let options = document.querySelectorAll(optionSelector);
                console.log(optionSelector, options.length);
                let aOptions = [].slice.call(options);
                aOptions.forEach((div) => {
                    let innerText = div.innerHTML.trim();
                    console.log(innerText);
                    if (innerText == value) {
                        div.focus();
                        div.click();
                    }
                });
            }, 1);
        }
    }
}
exports.GoogleCom = GoogleCom;

},{"./BasicFiller":12}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BasicFiller_1 = require("./BasicFiller");
/**
 * @see https://de.indeed.com/viewjob?jk=1f37eef6ca8b860f&q=php&tk=1birctct992sgddm&from=web
 * @problem with iframes from other domain apply.indeed.com
 */
class IndeedCom extends BasicFiller_1.BasicFiller {
    constructor() {
        super(...arguments);
        this.map = {
            'input#applicant.name': 'basics.name',
            'input#applicant.email': 'basics.email',
            'input#applicant.phoneNumber': 'basics.phone',
        };
    }
}
exports.IndeedCom = IndeedCom;

},{"./BasicFiller":12}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BasicFiller_1 = require("./BasicFiller");
/**
 * @see https://jobs.nintendo.de/main?fn=bm.ext.jobsform&refnr=2341288&land=DE
 */
class JobsNintendoDe extends BasicFiller_1.BasicFiller {
    constructor(resume) {
        super(resume);
        this.map = {
            "input[name=\"bem\"]": "coverLetter",
            "select[name=\"kontakt\"]": "basics.preferredContact",
            "input[name=\"geschl\"]": "basics.anrede",
            "select[name=\"titel\"]": "basics.title",
            "input[name=\"vname\"]": "basics.firstName",
            "input[name=\"name\"]": "basics.lastName",
            "input[name=\"ansch\"]": "basics.location.street",
            "input[name=\"anschplz\"]": "basics.location.zip",
            "input[name=\"anschort\"]": "basics.location.city",
            "select[name=\"anschland\"]": "basics.location.country",
            "input[name=\"telefon1\"]": "basics.phone",
            "input[name=\"telefon2\"]": "basics.phone2",
            "input[name=\"telefax\"]": "basics.fax",
            "input[name=\"email\"]": "basics.email",
            "select[name=\"schule\"]": "educationByType.school.studyType",
            "input[name=\"schule1\"]": "educationByType.school.studyType",
            "select[name=\"abschl\"]": "educationByType.school.degree",
            "input[name=\"abschl1\"]": "educationByType.school.degree",
            "textarea[name=\"zinfo\"]": "educationByType.school.institution",
            "input[name=\"ausb1\"]": "educationByType.apprenticeship1.studyType",
            "input[name=\"firma1\"]": "educationByType.apprenticeship1.institution",
            "input[name=\"fachricht1\"]": "educationByType.apprenticeship1.area",
            "input[name=\"anschort1\"]": "educationByType.apprenticeship1.location",
            "textarea[name=\"zinfo1\"]": "educationByType.apprenticeship1.comment",
            "input[name=\"ausb2\"]": "educationByType.apprenticeship2.studyType",
            "input[name=\"firma2\"]": "educationByType.apprenticeship2.institution",
            "input[name=\"fachricht2\"]": "educationByType.apprenticeship2.area",
            "input[name=\"anschort2\"]": "educationByType.apprenticeship2.location",
            "textarea[name=\"zinfo2\"]": "educationByType.apprenticeship2.comment",
        };
        this.resume.setEducationByType();
    }
}
exports.JobsNintendoDe = JobsNintendoDe;

},{"./BasicFiller":12}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BasicFiller_1 = require("./BasicFiller");
/**
 * @see https://onapply.onapply.de/bewerbung/2620/On-apply-GmbH-Web-Developer-%28m-f%29-Frankfurt-am-Main--Deutschland.html
 */
class OnApplyDe extends BasicFiller_1.BasicFiller {
    constructor() {
        super(...arguments);
        this.map = {
            'select#applicationform-title': 'basics.title',
            'input#applicationform-firstname': 'basics.firstName',
            'input#applicationform-lastname': 'basics.lastName',
            'input#applicationform-email': 'basics.email',
            'input#applicationform-phonenumber': 'basics.phone',
        };
    }
}
exports.OnApplyDe = OnApplyDe;

},{"./BasicFiller":12}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BasicFiller_1 = require("./BasicFiller");
/**
 * @see https://chj.tbe.taleo.net/chj05/ats/careers/apply.jsp?rid=47925&org=TESLA&cws=1&parsingId=TASKTESLA:1163242737:1497820102189&parsingToken=ef1a12e80bb18b79f1e359e96b447e9c1baf2660&emplProfileImported=true
 */
class TaleoNet extends BasicFiller_1.BasicFiller {
    constructor(resume) {
        super(resume);
        this.map = {
            "input#email": 'basics.email',
            "input#cwsPassword": 'basics.password',
            "input#cwsPassword_2": 'basics.password',
            "input#firstName": 'basics.firstName',
            "input#lastName": 'basics.lastName',
            "input#phone": 'basics.phone',
            "input#cellPhone": 'basics.phone2',
            'input#country': 'basics.location.country',
            'input#address': 'basics.location.street',
            'input#secondaryAddress': 'basics.location.address2',
            'input#city': 'basics.location.city',
            'input[name="CUSTOM_1372"]': 'basics.location.region',
            'input#zipCode': 'basics.location.zip',
            'input[name="jobTitle_1"]': 'work.0.position',
            'input[workDateFrom_1]': 'work.0.startMonthSlashYear',
            'input[workDateTo_1]': 'work.0.endMonthSlashYear',
            'input[name="companyName_1"]': 'work.0.company',
            'input[name="jobTitle_2"]': 'work.1.position',
            'input[workDateFrom_2]': 'work.1.startMonthSlashYear',
            'input[workDateTo_2]': 'work.1.endMonthSlashYear',
            'input[name="companyName_2"]': 'work.1.company',
            'textarea#__id_txt_resumeText': 'coverLetter',
        };
        resume.work.forEach((work) => {
            let startDate = new Date(work.startDate);
            work['startMonthSlashYear'] = (1 + startDate.getMonth()) + '/' + startDate.getFullYear();
            if ('endDate' in work) {
                let endDate = new Date(work.endDate);
                work['endMonthSlashYear'] = (1 + endDate.getMonth()) + '/' + endDate.getFullYear();
            }
            // console.log(work);
        });
    }
}
exports.TaleoNet = TaleoNet;

},{"./BasicFiller":12}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BasicFiller_1 = require("./BasicFiller");
/**
 * @see https://www.google.com/about/careers/applications/u/1/packets/d12dae4f-27d3-4a9b-9c2b-b7f52723c739/form
 */
class VolkswagenDe extends BasicFiller_1.BasicFiller {
    constructor(resume) {
        super(resume);
        this.map = {
            'select[name="salutationId"]': 'basics.anrede',
            'input[name="firstName"]': 'basics.firstName',
            'input[name="lastName"]': 'basics.lastName',
            'input[name="email"]': 'basics.email',
            // 'input[name="alias"]': 'basics.username',
            'input#REGISTER--registerUsername': 'basics.username',
            'input#REGISTER--registerPassword': 'basics.password',
            'input#REGISTER--registerCheck': 'basics.password',
            'select[name="zBirthdayDay"]': 'basics.birthDate.day',
            'select[name="zBirthdayMonth"]': 'basics.birthDate.month',
            'select[name="zBirthdayYear"]': 'basics.birthDate.year',
            'select[name="zDisability"]': 'basics.disability',
            'select[name="zNationality"]': 'basics.nationality',
            'input[name="homePhone"]': 'basics.phone',
            'input[name="mobilePhone"]': 'basics.phone2',
            'input[name="address1"]': 'basics.location.street',
            'input[name="address2"]': 'basics.location.address2',
            'input[name="postalCode"]': 'basics.location.zip',
            'input[name="city"]': 'basics.location.city',
            'select[name="countryId"]': 'basics.location.country',
            'select[name="startMonth"]': 'work.0.startMonth',
            'select[name="startYear"]': 'work.0.startYear',
            'select[name="endMonth"]': 'work.0.endMonth',
            'select[name="endYear"]': 'work.0.endYear',
            'textarea[name="description"]': 'work.0.summary',
            'input[name="jobTitle"]': 'work.0.position',
            'input[name="employer"]': 'work.0.company',
            '.work input[name="city"]': 'work.0.city',
            '.work input[name="country"]': 'work.0.city',
        };
        //this.resume.setEducationByType();
    }
    fill(document) {
        super.fill(document);
        const checkBox = document.querySelector('div.policyBtn div.leftIcon.checkBox.removeFocusBorder');
        if (checkBox) {
            checkBox.className += ' isChecked';
        }
    }
}
exports.VolkswagenDe = VolkswagenDe;

},{"./BasicFiller":12}]},{},[10]);
